[
  {
    "ContainingType": "ToDoListapi.Controllers.TodolistController",
    "Method": "updateListStatus",
    "RelativePath": "api/Todolist/{listId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "listId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "todoItem",
        "Type": "ToDoListapi.Models.TodoFulllist",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.TodolistController",
    "Method": "addNewCategory",
    "RelativePath": "api/Todolist/addNewCategory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "category",
        "Type": "ToDoListapi.Models.Category",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.TodolistController",
    "Method": "addNewList",
    "RelativePath": "api/Todolist/addNewList",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "_list",
        "Type": "ToDoListapi.Models.TodoFulllist",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.TodolistController",
    "Method": "DeleteCategory",
    "RelativePath": "api/Todolist/deleteCategory/{categoryId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.TodolistController",
    "Method": "DeleteTodoItem",
    "RelativePath": "api/Todolist/deleteTodolists/{listId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "listId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.TodolistController",
    "Method": "GetCategory",
    "RelativePath": "api/Todolist/getCategory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.TodolistController",
    "Method": "GetFullList",
    "RelativePath": "api/Todolist/getList",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "ToDoListapi.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.UserController",
    "Method": "LoginRequest",
    "RelativePath": "api/User/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "_user",
        "Type": "ToDoListapi.Models.LoginModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDoListapi.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ToDoListapi.WeatherForecast, ToDoListapi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]